=== 1 ===
1. 陣列的玩法：計算兩個數列間數字的差距
   把數值當作陣列的位置存取 A[1]=5, 數值1在位置5的地方
2. switch 的用法
3. define 的用法
4. 記憶體的位址計算
5. 字元的加密解密：'a'+(ch-'a'+23)%26
6. scanf() 和 printf() 的參數傳入方式
7. 二分法和二分搜尋法：如何縮減範圍
8. 追蹤遞迴程式碼的展開
9. 追蹤遞迴程式碼的展開(注意呼叫順序)

=== 2 ===
1. Stack的程式碼
2. Queue的程式碼
3. 以pointer方式傳參數給程式

=== 3 ===
(P1) 給定一個數列, 
     從第3個數字開始, 若和前一個數字差值大於5, 則把該數字取代為前3個數字的中位數
(P2) 題目說明三種洗牌方式, 
     給定一個“洗完”的狀態和洗牌的流程後, 詢問『初始狀態』
(P3) 給定N個位置, 每個值代表一踩到這個點會被立刻傳送其他位置(傳送過去的位置可能超過N)
     保證起點0和終點的傳送點一定都是自己的位置
     往左L格, 往右R格, 目標是P格, 求『最少』需要多少次才能抵達P？
     N=1e6, MaxNo=1e8
    
    5 3 1 2
    0 3 2 3 5
    ans=2
    

(P4) 2 ≦ R, C ≦ 25
     給定二維陣列的值 v[x][y]={0,1}
     當整行的數字都是0/1時可以整行消去
     求改『最少格』後可以讓整張地圖被消除(只剩 One Column or One Row)
4 5
1 1 1 0 1
0 1 0 1 1
0 0 0 0 0
0 0 0 1 0
ans=2

3 5
0 0 0 1 0
1 0 1 1 1
0 0 0 1 0
ans=1